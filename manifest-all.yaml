apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: postgres
  namespace: monitoring
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:10.5-alpine
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-persistent-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-persistent-storage
        # This AWS EBS volume must already exist.
        emptyDir: {}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redis
  namespace: monitoring
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redash-worker
  namespace: monitoring
  labels:
    app: redash-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redash-worker
  template:
    metadata:
      labels:
        app: redash-worker
    spec:
      containers:
      - name: redash-worker
        image: redash/redash
        args: ["scheduler"]
        ports:
        - containerPort: 5000
        env:
        - name: PYTHONUNBUFFERED
          value: "0"
        - name: REDASH_LOG_LEVEL
          value: INFO
        - name: REDASH_REDIS_URL
          value: "redis://redis:6379/0"
        - name: REDASH_DATABASE_URL
          value: "postgresql://postgres@postgres/postgres"
        - name: QUEUES
          value: "queries,scheduled_queries,celery"
        - name: WORKERS_COUNT
          value: "2"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redash
  namespace: monitoring
  labels:
    app: redash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redash
  template:
    metadata:
      labels:
        app: redash
    spec:
      containers:
      - name: redash
        image: redash/redash
        args: ["server"]
        ports:
        - containerPort: 5000
        env:
        - name: PYTHONUNBUFFERED
          value: "0"
        - name: REDASH_LOG_LEVEL
          value: INFO
        - name: REDASH_REDIS_URL
          value: "redis://redis:6379/0"
        - name: REDASH_DATABASE_URL
          value: "postgresql://postgres@postgres/postgres"
        - name: REDASH_COOKIE_SECRET
          value: veryverysecret
        - name: REDASH_WEB_WORKERS
          value: "4"
---
kind: Service
apiVersion: v1
metadata:
  namespace: monitoring
  labels:
    app: redash
  name: redash
spec:
  selector:
    app: redash
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 5000
  type: NodePort
